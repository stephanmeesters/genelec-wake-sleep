name: .NET Desktop CI

on:
  push:
    branches:
      - main

env:
  WINDOWS_ZIP: GenelecWakeSleep-windows-v1.0.${{ github.run_number }}.zip
  LINUX_ZIP: GenelecWakeSleep-linux-v1.0.${{ github.run_number }}.zip
  OSX_ZIP: GenelecWakeSleep-osx-v1.0.${{ github.run_number }}.zip

jobs:
  build_and_release:
    permissions: write-all
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Download hidapi-win.zip
      run: |
        curl -LO https://github.com/libusb/hidapi/releases/download/hidapi-0.14.0/hidapi-win.zip
        unzip hidapi-win.zip -d hidapi

    - name: Copy hidapi.dll to src directory
      run: |
        cp hidapi/x64/hidapi.dll ./hidapi.dll

    - name: Restore dependencies
      run: dotnet restore GenelecApp.sln

    - name: Build for Windows
      run: dotnet publish -c Release -r win-x64 -p:PublishSingleFile=true --self-contained true /p:DebugType=None /p:DebugSymbols=false -o ./binaries/win-x64 GenelecApp.sln

    - name: Build for Linux
      run: dotnet publish -c Release -r linux-x64 -p:PublishSingleFile=true --self-contained true /p:DebugType=None /p:DebugSymbols=false -o ./binaries/linux-x64 GenelecApp.sln

    - name: Build for macOS
      run: dotnet publish -c Release -r osx-x64 -p:PublishSingleFile=true --self-contained true /p:DebugType=None /p:DebugSymbols=false -o ./binaries/osx-x64 GenelecApp.sln

    - name: Archive binaries
      run: |
        cd ./binaries
        Compress-Archive -Path win-x64/* -Destination ${{ env.WINDOWS_ZIP }}
        Compress-Archive -Path linux-x64/* -Destination ${{ env.LINUX_ZIP }}
        Compress-Archive -Path osx-x64/* -Destination ${{ env.OSX_ZIP }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.${{ github.run_number }} # Use auto-incremented version based on the run number
        release_name: Release v1.0.${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Attach Windows binaries to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./binaries/${{ env.WINDOWS_ZIP }}
        asset_name: ${{ env.WINDOWS_ZIP }}
        asset_content_type: application/zip

    - name: Attach Linux binaries to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./binaries/${{ env.LINUX_ZIP }}
        asset_name: ${{ env.LINUX_ZIP }}
        asset_content_type: application/zip

    - name: Attach macOS binaries to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./binaries/${{ env.OSX_ZIP }}
        asset_name: ${{ env.OSX_ZIP }}
        asset_content_type: application/zip
